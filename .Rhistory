runApp('Documents/GitHub/twitter-identities-shiny')
runApp('Documents/GitHub/twitter-identities-shiny')
runApp('Documents/GitHub/twitter-identities-shiny')
runApp('Documents/GitHub/twitter-identities-shiny')
rsconnect::setAccountInfo(name='bernhardclemm',
token='F097FCB6E579CD8B6B2504CD53078BC9',
secret='T/K+uW6djHJHK+PZVcqRQFGYKXHrb3efdK6TY5b5')
runApp('Documents/GitHub/twitter-identities-shiny')
runApp('Documents/GitHub/twitter-identities-shiny')
runApp('Documents/GitHub/twitter-identities-shiny')
runApp('Documents/GitHub/twitter-identities-shiny')
runApp('Documents/GitHub/twitter-identities-shiny')
runApp('Documents/GitHub/twitter-identities-shiny')
tweeters <- read.csv("./data/tweeters.csv")
tweeters <- read.csv("./data/tweeters.csv")
setwd("/Users/bernhard/Documents/GitHub/twitter-identities-shiny")
tweeters <- read.csv("./data/tweeters.csv")
tweeters %<>%
mutate(Political = case_when(conservative == 1 ~ "Conservative",
liberal == 1 ~ "Liberal",
resist == 1 ~ "#resist",
maga == 1 ~ "#maga")) %>%
mutate(Social = case_when(mother == 1 ~ "Mother/mom/mommy",
father == 1 ~ "Father/dad",
husband == 1 ~ "Husband",
wife == 1 ~ "Wife"))
levels(tweeters$Social)
View(tweeters)
table(tweeters$Social)
table(tweeters$Political)
?colorFactor
runApp()
runApp()
runApp()
runApp()
runApp()
?addCircles
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Documents/GitHub/visualize-regression-shiny')
styler:::style_selection()
runApp('~/Documents/GitHub/visualize-regression-shiny')
?colorscale
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
fig <- fig %>%
layout(
xaxis = list(
dtick = 0.75,
tick0 = 0.5,
tickmode = "linear"
))
fig <- plot_ly(
type = "scatter",
x = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12),
y = c(28.8, 28.5, 37, 56.8, 69.7, 79.7, 78.5, 77.8, 74.1, 62.6, 45.3, 39.9),
mode = "markers+lines")
fig <- fig %>%
layout(
xaxis = list(
dtick = 0.75,
tick0 = 0.5,
tickmode = "linear"
))
fig
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
runApp('~/Documents/GitHub/visualize-regression-shiny')
setwd("/Users/bernhard/Documents/GitHub/visualize-regression-shiny")
data <- read.csv("./bes.csv")
table(data$political_interest)
table(data$political_trust)
table(data$education_level)
table(data$education_level)
table(data$ideology)
data <- read.dta("./bes_f2f_2017_v1.3.dta")
data %<>% mutate(political_interest = case_when(a03 == "Not at all interested" ~ 0,
a03 == "Not very interested" ~ 1,
a03 == "Fairly interested" ~ 2,
a03 == "Very interested" ~ 3)) %>%
mutate(political_trust = case_when(n03 == "0 No trust" ~ 0,
n03 == "1" ~ 1,
n03 == "2" ~ 2,
n03 == "3" ~ 3,
n03 == "4" ~ 4,
n03 == "5" ~ 5,
n03 == "6" ~ 6,
n03 == "7" ~ 7,
n03 == "8" ~ 8,
n03 == "9" ~ 9,
n03 == "10 A great deal of trust" ~ 10)) %>%
# mutate(read_newspapers = factor(k02, ordered = TRUE, levels = c("No", "Yes"))) %>%
mutate(read_newspapers = case_when(k02 == "No" ~ 1,
k02 == "Yes" ~ 2)) %>%
mutate(canvassed = case_when(k11 == "No" ~ 1,
k11 == "Yes" ~ 2)) %>%
mutate(education_level = case_when(edlevel == "No qualifications" ~ 0,
edlevel == "Below GCSE" ~ 1,
edlevel == "GCSE" ~ 2,
edlevel == "A-level" ~ 3,
edlevel == "Undergraduate" ~ 4,
edlevel == "Postgrad" ~ 5)) %>%
mutate(age = as.numeric(Age)) %>%
mutate(age = ifelse(age == -2, NA, age)) %>%
mutate(ideology = as.character(e01)) %>%
mutate(ideology = case_when(ideology == "Not stated" |
ideology == "Refused" |
ideology == "Don`t know" ~ NA_character_,
ideology == "0 Left"  ~ "0",
ideology == "10 Right" ~ "10",
TRUE ~ as.character(ideology))) %>%
mutate(ideology = as.numeric(as.character(ideology))) %>%
select(political_interest, political_trust, read_newspapers,
canvassed, education_level, age, ideology)
write.csv(data, "./bes.csv", row.names = F)
runApp()
data <- read.dta("./bes_f2f_2017_v1.3.dta")
# Recode data
##Check: https://www.britishelectionstudy.com/wp-content/uploads/2019/01/BES-2017-F2F-codebook.pdf
data %<>% mutate(political_interest = case_when(a03 == "Not at all interested" ~ 0,
a03 == "Not very interested" ~ 1,
a03 == "Fairly interested" ~ 2,
a03 == "Very interested" ~ 3)) %>%
mutate(political_trust = case_when(n03 == "0 No trust" ~ 0,
n03 == "1" ~ 1,
n03 == "2" ~ 2,
n03 == "3" ~ 3,
n03 == "4" ~ 4,
n03 == "5" ~ 5,
n03 == "6" ~ 6,
n03 == "7" ~ 7,
n03 == "8" ~ 8,
n03 == "9" ~ 9,
n03 == "10 A great deal of trust" ~ 10)) %>%
mutate(read_newspapers = factor(k02, ordered = TRUE, levels = c("No", "Yes"))) %>%
# mutate(read_newspapers = case_when(k02 == "No" ~ 1,
#                                    k02 == "Yes" ~ 2)) %>%
mutate(canvassed = case_when(k11 == "No" ~ 1,
k11 == "Yes" ~ 2)) %>%
mutate(education_level = case_when(edlevel == "No qualifications" ~ 0,
edlevel == "Below GCSE" ~ 1,
edlevel == "GCSE" ~ 2,
edlevel == "A-level" ~ 3,
edlevel == "Undergraduate" ~ 4,
edlevel == "Postgrad" ~ 5)) %>%
mutate(age = as.numeric(Age)) %>%
mutate(age = ifelse(age == -2, NA, age)) %>%
mutate(ideology = as.character(e01)) %>%
mutate(ideology = case_when(ideology == "Not stated" |
ideology == "Refused" |
ideology == "Don`t know" ~ NA_character_,
ideology == "0 Left"  ~ "0",
ideology == "10 Right" ~ "10",
TRUE ~ as.character(ideology))) %>%
mutate(ideology = as.numeric(as.character(ideology))) %>%
select(political_interest, political_trust, read_newspapers,
canvassed, education_level, age, ideology)
# Save data
write.csv(data, "./bes.csv", row.names = F)
data <- read.dta("./bes_f2f_2017_v1.3.dta")
# Recode data
##Check: https://www.britishelectionstudy.com/wp-content/uploads/2019/01/BES-2017-F2F-codebook.pdf
data %<>% mutate(political_interest = case_when(a03 == "Not at all interested" ~ 0,
a03 == "Not very interested" ~ 1,
a03 == "Fairly interested" ~ 2,
a03 == "Very interested" ~ 3)) %>%
mutate(political_trust = case_when(n03 == "0 No trust" ~ 0,
n03 == "1" ~ 1,
n03 == "2" ~ 2,
n03 == "3" ~ 3,
n03 == "4" ~ 4,
n03 == "5" ~ 5,
n03 == "6" ~ 6,
n03 == "7" ~ 7,
n03 == "8" ~ 8,
n03 == "9" ~ 9,
n03 == "10 A great deal of trust" ~ 10)) %>%
mutate(read_newspapers = factor(k02, ordered = TRUE, levels = c("No", "Yes"))) %>%
# mutate(read_newspapers = case_when(k02 == "No" ~ 1,
#                                    k02 == "Yes" ~ 2)) %>%
mutate(canvassed = case_when(k11 == "No" ~ 1,
k11 == "Yes" ~ 2)) %>%
mutate(education_level = case_when(edlevel == "No qualifications" ~ 0,
edlevel == "Below GCSE" ~ 1,
edlevel == "GCSE" ~ 2,
edlevel == "A-level" ~ 3,
edlevel == "Undergraduate" ~ 4,
edlevel == "Postgrad" ~ 5)) %>%
mutate(age = as.numeric(Age)) %>%
mutate(age = ifelse(age == -2, NA, age)) %>%
mutate(ideology = as.character(e01)) %>%
mutate(ideology = case_when(ideology == "Not stated" |
ideology == "Refused" |
ideology == "Don`t know" ~ NA_character_,
ideology == "0 Left"  ~ "0",
ideology == "10 Right" ~ "10",
TRUE ~ as.character(ideology))) %>%
mutate(ideology = as.numeric(as.character(ideology))) %>%
select(political_interest, political_trust, read_newspapers,
canvassed, education_level, age, ideology)
# Save data
write.csv(data, "./bes.csv", row.names = F)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
############################
### Prepare BES data set ###
############################
library(magrittr)
library(tidyr)
library(dplyr)
library(foreign)
# Read in data
data <- read.dta("./bes_f2f_2017_v1.3.dta")
# Recode data
##Check: https://www.britishelectionstudy.com/wp-content/uploads/2019/01/BES-2017-F2F-codebook.pdf
data %<>% mutate(political_interest = case_when(a03 == "Not at all interested" ~ 0,
a03 == "Not very interested" ~ 1,
a03 == "Fairly interested" ~ 2,
a03 == "Very interested" ~ 3)) %>%
mutate(political_trust = case_when(n03 == "0 No trust" ~ 0,
n03 == "1" ~ 1,
n03 == "2" ~ 2,
n03 == "3" ~ 3,
n03 == "4" ~ 4,
n03 == "5" ~ 5,
n03 == "6" ~ 6,
n03 == "7" ~ 7,
n03 == "8" ~ 8,
n03 == "9" ~ 9,
n03 == "10 A great deal of trust" ~ 10)) %>%
# mutate(read_newspapers = factor(k02, ordered = TRUE, levels = c("No", "Yes"))) %>%
mutate(read_newspapers = case_when(k02 == "No" ~ 1,
k02 == "Yes" ~ 2)) %>%
mutate(canvassed = case_when(k11 == "No" ~ 1,
k11 == "Yes" ~ 2)) %>%
mutate(education_level = case_when(edlevel == "No qualifications" ~ 0,
edlevel == "Below GCSE" ~ 1,
edlevel == "GCSE" ~ 2,
edlevel == "A-level" ~ 3,
edlevel == "Undergraduate" ~ 4,
edlevel == "Postgrad" ~ 5)) %>%
mutate(age = as.numeric(Age)) %>%
mutate(age = ifelse(age == -2, NA, age)) %>%
mutate(ideology = as.character(e01)) %>%
mutate(ideology = case_when(ideology == "Not stated" |
ideology == "Refused" |
ideology == "Don`t know" ~ NA_character_,
ideology == "0 Left"  ~ "0",
ideology == "10 Right" ~ "10",
TRUE ~ as.character(ideology))) %>%
mutate(ideology = as.numeric(as.character(ideology))) %>%
select(political_interest, political_trust, read_newspapers,
canvassed, education_level, age, ideology)
# Save data
write.csv(data, "./bes.csv", row.names = F)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
knitr::opts_chunk$set(cache = TRUE,
echo = FALSE,
concordance = TRUE,
fig.pos = 'H',
warning = FALSE,
message = FALSE)
library(tidyverse)
library(imager)
knitr::opts_chunk$set(cache = TRUE,
echo = FALSE,
concordance = TRUE,
fig.pos = 'H',
warning = FALSE,
message = FALSE)
library(tidyverse)
library(imager)
knitr::opts_chunk$set(cache = TRUE,
echo = FALSE,
concordance = TRUE,
fig.pos = 'H',
warning = FALSE,
message = FALSE)
library(tidyverse)
# library(imager)
library(ggpubr)
library(DeclareDesign)
library(kableExtra)
library(glmnet)
library(estimatr)
library(bcf)
library(DiagrammeR)
endlabelled.as.numeric <- function(col, which_number = "first") {
if (which_number == "first") {
vector <- as.numeric(str_extract(col, "[0-9]+"))
} else if (which_number == "last") {
vector_list <- sapply(str_extract_all(col, "[0-9]+"), tail, 1)
vector <- as.numeric(as.character(vector_list))
}
return(vector)
}
knitr::opts_chunk$set(cache = TRUE,
echo = FALSE,
concordance = TRUE,
fig.pos = 'H',
warning = FALSE,
message = FALSE)
library(tidyverse)
library(imager)
knitr::opts_chunk$set(cache = TRUE,
echo = FALSE,
concordance = TRUE,
fig.pos = 'H',
warning = FALSE,
message = FALSE)
library(tidyverse)
# library(imager)
library(ggpubr)
library(DeclareDesign)
library(kableExtra)
library(glmnet)
library(estimatr)
library(bcf)
library(DiagrammeR)
endlabelled.as.numeric <- function(col, which_number = "first") {
if (which_number == "first") {
vector <- as.numeric(str_extract(col, "[0-9]+"))
} else if (which_number == "last") {
vector_list <- sapply(str_extract_all(col, "[0-9]+"), tail, 1)
vector <- as.numeric(as.character(vector_list))
}
return(vector)
}
# Wave 1
data_w1 <- read.csv("data/20201022_W1.csv")
data_w1 <- data_w1[-c(1:2),] %>%
filter(attention == "true" & Q_TerminateFlag == "") # n = 2521
# Wave 2
data_w2_control <- read.csv("data/20201028_W2_CONT.csv")
data_w2_control <- data_w2_control[-c(1:2),] %>%
mutate(treat_credibility = "Control")
data_w2_high <- read.csv("data/20201028_W2_PRO.csv")
data_w2_high <- data_w2_high[-c(1:2),] %>%
mutate(treat_credibility = "High")
data_w2_low <- read.csv("data/20201028_W2_ANTI.csv")
data_w2_low <- data_w2_low[-c(1:2),] %>%
mutate(treat_credibility = "Low")
data_w2 <- bind_rows(data_w2_control, data_w2_high, data_w2_low)
# Wave 3
data_w3 <- read.csv("data/20201102_W3.csv")
data_w3 <- data_w3[-c(1:2),]
# Recoding
source("recoding.R")
# Add respondent IDs and remove duplicates
source("matching_ids.R")
# Join
data_w1w2w3 <- data_w1 %>%
left_join(., data_w2, by = "id") %>%
left_join(., data_w3, by = "id")
knitr::opts_chunk$set(cache = TRUE,
echo = FALSE,
concordance = TRUE,
fig.pos = 'H',
warning = FALSE,
message = FALSE)
library(tidyverse)
library(imager)
knitr::opts_chunk$set(cache = TRUE,
echo = FALSE,
concordance = TRUE,
fig.pos = 'H',
warning = FALSE,
message = FALSE)
library(tidyverse)
# library(imager)
library(ggpubr)
library(DeclareDesign)
library(kableExtra)
library(glmnet)
library(estimatr)
library(bcf)
library(DiagrammeR)
endlabelled.as.numeric <- function(col, which_number = "first") {
if (which_number == "first") {
vector <- as.numeric(str_extract(col, "[0-9]+"))
} else if (which_number == "last") {
vector_list <- sapply(str_extract_all(col, "[0-9]+"), tail, 1)
vector <- as.numeric(as.character(vector_list))
}
return(vector)
}
h2_summary <- data_w1w2w3 %>%
select(treat_credibility_w1, treat_persuasion_w2, shortwork_attitude_num_w2) %>%
filter(!is.na(treat_persuasion_w2)) %>%
group_by(treat_credibility_w1, treat_persuasion_w2) %>%
get_summary_stats(shortwork_attitude_num_w2) %>%
mutate(ymax = mean + 1.96*se,
ymin = mean - 1.96*se)
h2_plot <- data_w1w2w3 %>%
filter(!is.na(treat_persuasion_w2)) %>%
ggplot(aes(x = treat_persuasion_w2,
y = shortwork_attitude_num_w2,
color = treat_credibility_w1)) +
geom_point(position = position_jitterdodge(jitter.width = 0.1,
jitter.height = 0.5),
alpha = 0.4) +
geom_pointrange(data = h2_summary,
aes(x = treat_persuasion_w2,
y = mean, group = treat_credibility_w1,
ymin = ymin, ymax = ymax),
position = position_dodge(width = 0.75),
fatten = 2,
col = "black") +
scale_y_continuous(name = "Short-term work policy attitude W2") +
scale_color_discrete(name = "Induced credibility treatment") +
scale_x_discrete(name = "Persuasion treatment",
labels = c("Control", "Persuasion")) +
ggtitle("Effect on attitude in W2") +
theme_light() +
theme(axis.text.x = element_text(size = 7),
axis.title = element_text(size = 8))
h3_summary <- data_w1w2w3 %>%
select(treat_credibility_w1, treat_persuasion_w2, shortwork_attitude_num_w3) %>%
filter(!is.na(treat_persuasion_w2)) %>%
group_by(treat_credibility_w1, treat_persuasion_w2) %>%
get_summary_stats(shortwork_attitude_num_w3) %>%
mutate(ymax = mean + 1.96*se,
ymin = mean - 1.96*se)
h3_plot <- data_w1w2w3 %>%
filter(!is.na(treat_persuasion_w2)) %>%
ggplot(aes(x = treat_persuasion_w2,
y = shortwork_attitude_num_w3,
color = treat_credibility_w1)) +
geom_point(position = position_jitterdodge(jitter.width = 0.1,
jitter.height = 0.5),
alpha = 0.4) +
geom_pointrange(data = h2_summary,
aes(x = treat_persuasion_w2,
y = mean, group = treat_credibility_w1,
ymin = ymin, ymax = ymax),
position = position_dodge(width = 0.75),
fatten = 2,
col = "black") +
scale_y_continuous(name = "Short-term work policy attitude W3") +
scale_color_discrete(name = "Induced credibility treatment") +
scale_x_discrete(name = "Persuasion treatment",
labels = c("Control", "Persuasion")) +
ggtitle("Effect on attitude in W3") +
theme_light() +
theme(axis.text.x = element_text(size = 7),
axis.title = element_text(size = 8))
ggarrange(h2_plot, h3_plot,
nrow = 1, common.legend = TRUE, legend = "bottom")
install.packages("tm.plugin.factiva")
FactivaSource("/Users/bernhard/Downloads/Factiva.html", format = "auto")
library(tm.plugin.factiva)
test <- FactivaSource("/Users/bernhard/Downloads/Factiva.html", format = "auto")
View(test)
test <- FactivaSource("/Users/bernhard/Downloads/Factiva.htm", format = "xml")
test <- FactivaSource("/Users/bernhard/Downloads/Factiva.htm", format = "XML")
test <- FactivaSource("/Users/bernhard/Downloads/Factiva.htm", format = "HTML")
test <- FactivaSource("/Users/bernhard/Downloads/Factiva.htm", format = "auto")
test$content
test$content[[1]]
test$content[1]
View(test)
install.packages("XML")
data <- xmlParse("/Users/bernhard/Desktop/factiva.html)
library(XML)
data <- xmlParse("/Users/bernhard/Desktop/factiva.html")
install.packages("xml2")
install.packages("xml2")
install.packages("xml2")
install.packages("xml2")
